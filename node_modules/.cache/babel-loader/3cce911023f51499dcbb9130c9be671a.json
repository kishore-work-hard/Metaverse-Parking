{"ast":null,"code":"var _jsxFileName = \"F:\\\\elvicto\\\\REPO\\\\meta-dev\\\\minecraft-react\\\\src\\\\components\\\\Ground.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { usePlane } from '@react-three/cannon';\nimport { TextureLoader, RepeatWrapping, NearestFilter, LinearMipMapLinearFilter } from 'three';\nimport layout from '../images/layout.jpg'; // import grass from '../images/grass.jpg';\n\nimport { useStore } from '../hooks/useStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Ground = props => {\n  _s();\n\n  const [ref] = usePlane(() => ({\n    rotation: [-Math.PI / 2, 0, 0],\n    ...props\n  }));\n  const texture = useMemo(() => {\n    const t = new TextureLoader().load(layout); // t.wrapS = RepeatWrapping\n    // t.wrapT = RepeatWrapping\n    // t.repeat.set(100, 100)\n\n    return t;\n  }, []);\n  const [addCube, activeTexture] = useStore(state => [state.addCube, state.texture]); // texture.magFilter = NearestFilter;\n  // texture.minFilter = LinearMipMapLinearFilter;\n  // texture.wrapS = RepeatWrapping;\n  // texture.wrapT = RepeatWrapping;\n  // texture.repeat.set(100, 100);\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    receiveShadow: true,\n    onClick: e => {\n      e.stopPropagation();\n      const [x, y, z] = Object.values(e.point).map(coord => Math.ceil(coord));\n      addCube(x, y, z, activeTexture);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      attach: \"geometry\",\n      args: [100, 100]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: texture,\n      attach: \"material\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Ground, \"AG6pWdcGcJcDnPqnoC+iUIT/BtY=\", false, function () {\n  return [usePlane, useStore];\n});\n\n_c = Ground;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ground\");","map":{"version":3,"names":["React","useMemo","usePlane","TextureLoader","RepeatWrapping","NearestFilter","LinearMipMapLinearFilter","layout","useStore","Ground","props","ref","rotation","Math","PI","texture","t","load","addCube","activeTexture","state","e","stopPropagation","x","y","z","Object","values","point","map","coord","ceil"],"sources":["F:/elvicto/REPO/meta-dev/minecraft-react/src/components/Ground.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { usePlane } from '@react-three/cannon';\r\nimport {\r\n  TextureLoader,\r\n  RepeatWrapping,\r\n  NearestFilter,\r\n  LinearMipMapLinearFilter,\r\n} from 'three';\r\n\r\nimport layout from '../images/layout.jpg';\r\n// import grass from '../images/grass.jpg';\r\nimport { useStore } from '../hooks/useStore';\r\n\r\nexport const Ground = (props) => {\r\n  const [ref] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }));\r\n  const texture = useMemo(() => {\r\n    const t = new TextureLoader().load(layout)\r\n    // t.wrapS = RepeatWrapping\r\n    // t.wrapT = RepeatWrapping\r\n    // t.repeat.set(100, 100)\r\n    return t\r\n  }, [])\r\n\r\n  const [addCube, activeTexture] = useStore((state) => [\r\n    state.addCube,\r\n    state.texture,\r\n  ]);\r\n  // texture.magFilter = NearestFilter;\r\n  // texture.minFilter = LinearMipMapLinearFilter;\r\n  // texture.wrapS = RepeatWrapping;\r\n  // texture.wrapT = RepeatWrapping;\r\n  // texture.repeat.set(100, 100);\r\n  return (\r\n    <mesh\r\n      ref={ref}\r\n      receiveShadow\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        const [x, y, z] = Object.values(e.point).map((coord) =>\r\n          Math.ceil(coord)\r\n        );\r\n        addCube(x, y, z, activeTexture);\r\n      }}\r\n    >\r\n      <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n      <meshStandardMaterial map={texture} attach=\"material\" />\r\n    </mesh>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,aADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,wBAJF,QAKO,OALP;AAOA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM,CAACC,GAAD,IAAQT,QAAQ,CAAC,OAAO;IAAEU,QAAQ,EAAE,CAAC,CAACC,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAZ;IAAkC,GAAGJ;EAArC,CAAP,CAAD,CAAtB;EACA,MAAMK,OAAO,GAAGd,OAAO,CAAC,MAAM;IAC5B,MAAMe,CAAC,GAAG,IAAIb,aAAJ,GAAoBc,IAApB,CAAyBV,MAAzB,CAAV,CAD4B,CAE5B;IACA;IACA;;IACA,OAAOS,CAAP;EACD,CANsB,EAMpB,EANoB,CAAvB;EAQA,MAAM,CAACE,OAAD,EAAUC,aAAV,IAA2BX,QAAQ,CAAEY,KAAD,IAAW,CACnDA,KAAK,CAACF,OAD6C,EAEnDE,KAAK,CAACL,OAF6C,CAAZ,CAAzC,CAV+B,CAc/B;EACA;EACA;EACA;EACA;;EACA,oBACE;IACE,GAAG,EAAEJ,GADP;IAEE,aAAa,MAFf;IAGE,OAAO,EAAGU,CAAD,IAAO;MACdA,CAAC,CAACC,eAAF;MACA,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYC,MAAM,CAACC,MAAP,CAAcN,CAAC,CAACO,KAAhB,EAAuBC,GAAvB,CAA4BC,KAAD,IAC3CjB,IAAI,CAACkB,IAAL,CAAUD,KAAV,CADgB,CAAlB;MAGAZ,OAAO,CAACK,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUN,aAAV,CAAP;IACD,CATH;IAAA,wBAWE;MAAqB,MAAM,EAAC,UAA5B;MAAuC,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN;IAA7C;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE;MAAsB,GAAG,EAAEJ,OAA3B;MAAoC,MAAM,EAAC;IAA3C;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAnCM;;GAAMN,M;UACGP,Q,EASmBM,Q;;;KAVtBC,M"},"metadata":{},"sourceType":"module"}