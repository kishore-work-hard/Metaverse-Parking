{"ast":null,"code":"import create from 'zustand';\nimport { nanoid } from 'nanoid';\n\nconst getLocalStorage = key => JSON.parse(window.localStorage.getItem(key));\n\nconst setLocalStorage = (key, value) => window.localStorage.setItem(key, JSON.stringify(value));\n\nexport const useStore = create(set => ({\n  texture: 'dirt',\n  cubes: getLocalStorage('world') || [],\n  addCube: (x, y, z) => set(state => ({\n    cubes: [...state.cubes // { key: nanoid(), pos: [x, y, z], texture: state.texture },\n    ]\n  })),\n  removeCube: (x, y, z) => {\n    set(state => ({\n      cubes: state.cubes.filter(cube => {\n        const [_x, _y, _z] = cube.pos;\n        return _x !== x || _y !== y || _z !== z;\n      })\n    }));\n  },\n  setTexture: texture => {\n    set(state => ({\n      texture\n    }));\n  },\n  saveWorld: () => set(state => {\n    setLocalStorage('world', state.cubes);\n  })\n}));","map":{"version":3,"names":["create","nanoid","getLocalStorage","key","JSON","parse","window","localStorage","getItem","setLocalStorage","value","setItem","stringify","useStore","set","texture","cubes","addCube","x","y","z","state","removeCube","filter","cube","_x","_y","_z","pos","setTexture","saveWorld"],"sources":["F:/elvicto/REPO/meta-dev/minecraft-react/src/hooks/useStore.js"],"sourcesContent":["import create from 'zustand';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst getLocalStorage = (key) => JSON.parse(window.localStorage.getItem(key));\r\nconst setLocalStorage = (key, value) =>\r\n  window.localStorage.setItem(key, JSON.stringify(value));\r\n\r\nexport const useStore = create((set) => ({\r\n  texture: 'dirt',\r\n  cubes: getLocalStorage('world') || [],\r\n  addCube: (x, y, z) =>\r\n    set((state) => ({\r\n      cubes: [\r\n        ...state.cubes,\r\n        // { key: nanoid(), pos: [x, y, z], texture: state.texture },\r\n      ],\r\n    })),\r\n  removeCube: (x, y, z) => {\r\n    set((state) => ({\r\n      cubes: state.cubes.filter((cube) => {\r\n        const [_x, _y, _z] = cube.pos;\r\n        return _x !== x || _y !== y || _z !== z;\r\n      }),\r\n    }));\r\n  },\r\n  setTexture: (texture) => {\r\n    set((state) => ({\r\n      texture,\r\n    }));\r\n  },\r\n  saveWorld: () =>\r\n    set((state) => {\r\n      setLocalStorage('world', state.cubes);\r\n    }),\r\n}));\r\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,eAAe,GAAIC,GAAD,IAASC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAX,CAAjC;;AACA,MAAMM,eAAe,GAAG,CAACN,GAAD,EAAMO,KAAN,KACtBJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BR,GAA5B,EAAiCC,IAAI,CAACQ,SAAL,CAAeF,KAAf,CAAjC,CADF;;AAGA,OAAO,MAAMG,QAAQ,GAAGb,MAAM,CAAEc,GAAD,KAAU;EACvCC,OAAO,EAAE,MAD8B;EAEvCC,KAAK,EAAEd,eAAe,CAAC,OAAD,CAAf,IAA4B,EAFI;EAGvCe,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KACPN,GAAG,CAAEO,KAAD,KAAY;IACdL,KAAK,EAAE,CACL,GAAGK,KAAK,CAACL,KADJ,CAEL;IAFK;EADO,CAAZ,CAAD,CAJkC;EAUvCM,UAAU,EAAE,CAACJ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;IACvBN,GAAG,CAAEO,KAAD,KAAY;MACdL,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAU;QAClC,MAAM,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,IAAeH,IAAI,CAACI,GAA1B;QACA,OAAOH,EAAE,KAAKP,CAAP,IAAYQ,EAAE,KAAKP,CAAnB,IAAwBQ,EAAE,KAAKP,CAAtC;MACD,CAHM;IADO,CAAZ,CAAD,CAAH;EAMD,CAjBsC;EAkBvCS,UAAU,EAAGd,OAAD,IAAa;IACvBD,GAAG,CAAEO,KAAD,KAAY;MACdN;IADc,CAAZ,CAAD,CAAH;EAGD,CAtBsC;EAuBvCe,SAAS,EAAE,MACThB,GAAG,CAAEO,KAAD,IAAW;IACbZ,eAAe,CAAC,OAAD,EAAUY,KAAK,CAACL,KAAhB,CAAf;EACD,CAFE;AAxBkC,CAAV,CAAD,CAAvB"},"metadata":{},"sourceType":"module"}